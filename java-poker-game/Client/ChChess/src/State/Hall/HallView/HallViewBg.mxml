<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml"
		   xmlns:local="*"
		   xmlns:ns1="State.Hall.HallView.*" 
		   xmlns:ns2="*"
		   xmlns:s="library://ns.adobe.com/flex/spark"
		   width="{GameGlobals.stageWidth}" height="{GameGlobals.stageHeight}" minWidth="900"
		   minHeight="600" borderColor="#efefef" borderStyle="inset" borderVisible="true"
		   creationComplete="canvas1_creationCompleteHandler(event)" verticalScrollPolicy="auto">
	
	<!-- 
	width="{GameGlobals.stageWidth}" 
	height="{GameGlobals.stageHeight}"
	
	width="900" 
	height="600"
	
	-->
	
	<mx:Image id="b1" left="0" right="0" top="0" bottom="0" source="assets/hall_bg.jpg"/>
	
	<ns2:mc_btn_gongGao left="58" top="0" useHandCursor="true" buttonMode="true"
						click="mc_btn_gonggao1_clickHandler(event)">
		
	</ns2:mc_btn_gongGao>
		
	<ns1:HallRoomList2 id="roomList1" left="120" right="120" top="108" bottom="84" alpha="0.8"
					   backgroundAlpha="0.8" horizontalCenter="0">
	</ns1:HallRoomList2>
	
	<ns1:HallGoldPointView id="headIcoView" right="20" top="60">
	</ns1:HallGoldPointView>
	
	<ns1:HallHeadIcoView id="headIco" right="230" top="50">
	</ns1:HallHeadIcoView>
	
	
	<ns2:mc_btn_joinRoom id="mc_btn_joinRoom1" 
						 bottom="20" horizontalCenter="-108" 
						  useHandCursor="true" buttonMode="true"
						 click="mc_btn_joinroom1_clickHandler(event)" 
						 rollOut="mc_btn_joinroom1_rollOutHandler(event)"
						 rollOver="mc_btn_joinroom1_rollOverHandler(event)"/>
	
	<ns2:mc_btn_quickJoinRoom id="mc_btn_quickJoinRoom1" 
							  bottom="20" horizontalCenter="70" 
							  useHandCursor="true" buttonMode="true"
							  click="mc_btn_quickjoinroom1_clickHandler(event)"							  
							  rollOut="mc_btn_quickjoinroom1_rollOutHandler(event)"
							  rollOver="mc_btn_quickjoinroom1_rollOverHandler(event)"/>
	
	
	
	<mx:Script>
		<![CDATA[
			
			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			import mx.flash.UIMovieClip;
			import mx.managers.PopUpManager;
			
			import net.wdmir.core.QiPaiEvent;
			import net.wdmir.core.QiPaiState;
			import net.wdmir.core.QiPaiStr;
			import net.silverfoxserver.extfactory.ChairModelFactory;
			import net.silverfoxserver.extmodel.ItemModelByChChess;
			import net.wdqipai.core.factory.UserModelFactory;
			import net.wdqipai.core.model.EUserSex;
			import net.wdqipai.core.model.FChat;
			import net.wdqipai.core.model.IChairModel;
			import net.wdqipai.core.model.ILookChairModel;
			import net.wdqipai.core.model.IRoomModel;
			import net.wdqipai.core.model.IRuleModel;
			import net.wdqipai.core.model.IUserModel;
			import net.wdqipai.core.model.level2.IdleModel;
			import net.wdqipai.core.model.level2.VarModel;
			
			public function get lang_HallViewBg_JoinRoomKoMsg_NoIdleChair1():String
			{
				return GameGlobals.qpc.data.configXML.langVariByChChess.HallViewBg_JoinRoomKoMsg_NoIdleChair1;
				
			}
			public function get lang_HallViewBg_JoinRoomKoMsg_ErrorRoomPassword2():String
			{
				return GameGlobals.qpc.data.configXML.langVariByChChess.HallViewBg_JoinRoomKoMsg_ErrorRoomPassword2;
				
			}
			public function get lang_HallViewBg_JoinRoomKoMsg_ProviderError3():String
			{
				return GameGlobals.qpc.data.configXML.langVariByChChess.HallViewBg_JoinRoomKoMsg_ProviderError3;
				
			}
			public function get lang_HallViewBg_JoinRoomKoMsg_WaitReconnectioRoom5():String
			{
				return GameGlobals.qpc.data.configXML.langVariByChChess.HallViewBg_JoinRoomKoMsg_WaitReconnectioRoom5;
				
			}
			
			public function get lang_HallViewBg_JoinRoomKoMsg_vipRoom6():String
			{
				return GameGlobals.qpc.data.configXML.langVariByChChess.HallViewBg_JoinRoomKoMsg_vipRoom6;
				
			}
			
			/**
			 * 
			 */ 
			private var _mailWin:MailWin = new MailWin();
			
			/**
			 * 
			 */ 
			private var _noticeWin:NoticeWin = new NoticeWin();
			
			private var _openedNoticeWin:Boolean = false;
						
			/**
			 * initialize
			 */ 
			public function canvas1_creationCompleteHandler(event:FlexEvent):void
			{
				//event listener
				if(!GameGlobals.qpc.hasEventListener(QiPaiEvent.onRoomListCreate))
				{
					GameGlobals.qpc.addEventListener(QiPaiEvent.onRoomListCreate,onRoomListCreate);
				}				
				
				//
				if(!GameGlobals.qpc.hasEventListener(QiPaiEvent.onJoinRoom))
				{
					GameGlobals.qpc.addEventListener(QiPaiEvent.onJoinRoom,onJoinRoom);
				}
				
				//
				if(!GameGlobals.qpc.hasEventListener(QiPaiEvent.onJoinRoomError))
				{
					GameGlobals.qpc.addEventListener(QiPaiEvent.onJoinRoomError,onJoinRoomError);
				}
				
				GameGlobals.qpc.addEventListener(QiPaiEvent.onLoadG,onLoadG);
				
				GameGlobals.qpc.addEventListener(QiPaiEvent.onMailVariablesUpdate,onMailVariablesUpdate);
			
			}
			
			/**
			 * 在大厅可按受邀请
			 */ 
			public function onMailVariablesUpdate(qevt:QiPaiEvent):void
			{
				try
				{
					//判断一个元件是不是在显示列表中				
					//[object _client_ChChess_mx_managers_SystemManager]
					//trace(_mailWin.parent);
					
					//只允许在大厅接收邮件消息，以免在房间中游戏被打扰
					if(QiPaiState.HALL == GameGlobals.currentState)
					{					
						var added:Boolean = false;
						
						//以免前面的信息被冲掉
						if(null != _mailWin.parent)
						{
							added = _mailWin.parent.contains(_mailWin);
						}
						
						if(!added)
						{
							this.showMailWin();
						}
					}
					
				}
				catch (exd:Error) 
				{            		
				   	Alert.show(QiPaiStr.getErrorMessage("onMailVariablesUpdate",exd.message));
				}				
							
			}
			
			public function onRoomListCreate(qevt:QiPaiEvent):void
			{
				
			}	
			
			public function onLoadG(qevt:QiPaiEvent):void
			{
				this.headIcoView.lblGoldPoint.text = qevt.params.g;
			
			
			}
			
			/**
			 * 只在第一次进入时打开
			 */ 
			public function refreshNotice():void
			{
				try
				{
					if(_openedNoticeWin)
					{
						return;
					}
					
					_openedNoticeWin = true;	
					
					//trace("Notice:" + GameGlobals.qpc.data.getClientConfig().Notice);
					
					//无内容不开启
					if("" == GameGlobals.qpc.data.getClientConfig().Notice ||
						"关闭" == GameGlobals.qpc.data.getClientConfig().Notice ||
						"close" == GameGlobals.qpc.data.getClientConfig().Notice)
					{							
						return;
					}
					
					//500太少,1000太慢
					setTimeout(showNoticeWin,750);
					//this.showNoticeWin();
					
					//执行查询断线重连
					setTimeout(GameGlobals.qpc.joinReconnectionRoom,1000);
					
				}
				catch (exd:Error) 
				{            		
					Alert.show(QiPaiStr.getErrorMessage("refreshNotice",exd.message));
				}	
			}
			
			/**
			 * 切换到此场景时刷新一次即可
			 */ 
			public function refreshGoldPoint():void
			{
				GameGlobals.qpc.loadGoldPoint();
			
			}
			
			public function refreshRoomList(event:TimerEvent=null):void
			{				
								
				GameGlobals.qpc.listRoom();
				
				GameGlobals.qpc.data.startRefreshHallRoomListTimer(this.listRoom);
			}			
			
			public function listRoom(event:TimerEvent=null):void
			{
				//
				GameGlobals.qpc.listRoom();
			
			}
			
			
			public function onJoinRoomError(qevt:QiPaiEvent):void
			{				
				//
				(FlexGlobals.topLevelApplication as ChChess).hideLoadingScr();
				
				var info:String = getJoinRoomKoMsg(qevt.params.code);
				
				//
				Alert.show(info,QiPaiStr.ALERT_TITLE,4);
				
			}
			
			private function getJoinRoomKoMsg(errCode:int):String
			{
				//			
				var NoIdleChair1:int = 1;if(NoIdleChair1 == errCode){ 
					
					//return "没有空闲的坐位。"; 
					return lang_HallViewBg_JoinRoomKoMsg_NoIdleChair1;
				}
				
				//错误的房间的密码。
				var ErrorRoomPassword2:int = 2;if(ErrorRoomPassword2 == errCode){ 
					
					//return "错误的房间密码。"; 
					return lang_HallViewBg_JoinRoomKoMsg_ErrorRoomPassword2;
				}
				
				//未知的错误。
				var ProviderError3:int = 3;if(ProviderError3 == errCode){ 
					
					//return "未知的错误。"; 
					
					return lang_HallViewBg_JoinRoomKoMsg_ProviderError3;
				}
				
				//未知的错误。
				var WaitReconnectioRoom5:int = 5;if(WaitReconnectioRoom5 == errCode){ 
					
					//return "该房间当前状态为断线重连。"; 
					
					return lang_HallViewBg_JoinRoomKoMsg_WaitReconnectioRoom5;
				}
				
				//未知的错误。
				var vipRoom6:int = 6;if(vipRoom6 == errCode){ 
					
					//return "该房间为VIP房间。"; 
					
					return lang_HallViewBg_JoinRoomKoMsg_vipRoom6;
				}
				
				return "";
			}
			
			public function onJoinRoom(qevt:QiPaiEvent):void
			{	
				try
				{
					(FlexGlobals.topLevelApplication as ChChess).hideLoadingScr();
						
					//进房间
					GameGlobals.currentState = QiPaiState.ROOM;
					
				}
				catch (exd:Error) 
				{            		
				   	Alert.show(QiPaiStr.getErrorMessage("onJoinRoom",exd.message));
				}	
			}
			
			/**
			 * 局时设置窗口
			 * 
			 */ 
			public function showMailWin():void
			{
				try
				{				
					/**
					 * 只有Alert窗口有权利让背景变暗，明暗分主次
					 */ 
				 	PopUpManager.addPopUp(_mailWin,this,false); 
	            	PopUpManager.centerPopUp(_mailWin); 
	            	
	            	//看邮件
	            	_mailWin.look();
	            		
	            	      					
					
	        	}
				catch (exd:Error) 
				{            		
				   	Alert.show(QiPaiStr.getErrorMessage("showMailWin",exd.message));
				}			
			}
			
			/**
			 * 
			 * 左上角，像网页样，因为刚开始居中centerPop不起作用，延时1秒才行
			 * 需要背景变暗
			 * 
			 */
			public function showNoticeWin():void
			{
				try
				{			
					
					/**
					 * 只有Alert窗口有权利让背景变暗，明暗分主次
					 */ 
					//PopUpManager.addPopUp(_noticeWin,this,false); 
					PopUpManager.addPopUp(_noticeWin,this,true); 
					PopUpManager.centerPopUp(_noticeWin); 
					
					//读入最新公告信息
					_noticeWin.look();
					
				}
				catch (exd:Error) 
				{            		
					Alert.show(QiPaiStr.getErrorMessage("showNoticeWin",exd.message));
				}			
			}
			
			protected function mc_btn_joinroom1_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				roomList1.BtnJoinRoom_Click(event);
			}
			
			
			protected function mc_btn_quickjoinroom1_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				roomList1.BtnAutoJoinRoom_Click();
			}
			
			
			protected function mc_btn_joinroom1_rollOverHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				mc_btn_joinRoom1.gotoAndStop(2);
			}
			
			
			protected function mc_btn_joinroom1_rollOutHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				mc_btn_joinRoom1.gotoAndStop(1);
			}
			
			
			protected function mc_btn_quickjoinroom1_rollOverHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				mc_btn_quickJoinRoom1.gotoAndStop(2);
			}
			
			
			protected function mc_btn_quickjoinroom1_rollOutHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				mc_btn_quickJoinRoom1.gotoAndStop(1);
			}
			
			protected function mc_btn_gonggao1_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				showNoticeWin();
			}
			
			
			
			
			
		]]>
	</mx:Script>
	
	
	<local:bg_cloud id="cloud1" x="0" y="0" mouseEnabled="false">
		
	</local:bg_cloud>
	
	
</mx:Canvas>
